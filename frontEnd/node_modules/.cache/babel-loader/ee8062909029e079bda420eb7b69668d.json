{"remainingRequest":"/Users/movi/Desktop/current/frontEnd/node_modules/babel-loader/lib/index.js!/Users/movi/Desktop/current/frontEnd/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/movi/Desktop/current/frontEnd/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/movi/Desktop/current/frontEnd/src/components/GlobalHeader/GlobalHeader.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/movi/Desktop/current/frontEnd/src/components/GlobalHeader/GlobalHeader.vue","mtime":1679910313000},{"path":"/Users/movi/Desktop/current/frontEnd/babel.config.js","mtime":1679456648000},{"path":"/Users/movi/Desktop/current/frontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1651221196058},{"path":"/Users/movi/Desktop/current/frontEnd/node_modules/babel-loader/lib/index.js","mtime":1669512949620},{"path":"/Users/movi/Desktop/current/frontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1651221196058},{"path":"/Users/movi/Desktop/current/frontEnd/node_modules/vue-loader/lib/index.js","mtime":1669512954316}],"contextDependencies":[],"result":["import UserMenu from \"../tools/UserMenu\";\nimport SMenu from \"../Menu/\";\nimport Logo from \"../tools/Logo\";\nimport { mixin } from '@/utils/mixin';\nexport default {\n  name: 'GlobalHeader',\n  components: {\n    UserMenu: UserMenu,\n    SMenu: SMenu,\n    Logo: Logo\n  },\n  mixins: [mixin],\n  props: {\n    mode: {\n      type: String,\n      // sidemenu, topmenu\n      default: 'sidemenu'\n    },\n    menus: {\n      type: Array,\n      required: true\n    },\n    theme: {\n      type: String,\n      required: false,\n      default: 'dark'\n    },\n    collapsed: {\n      type: Boolean,\n      required: false,\n      default: false\n    },\n    device: {\n      type: String,\n      required: false,\n      default: 'desktop'\n    }\n  },\n  data: function data() {\n    return {\n      visible: true,\n      oldScrollTop: 0\n    };\n  },\n  mounted: function mounted() {\n    document.addEventListener('scroll', this.handleScroll, {\n      passive: true\n    });\n  },\n  methods: {\n    handleScroll: function handleScroll() {\n      var _this = this;\n      if (!this.autoHideHeader) {\n        return;\n      }\n      var scrollTop = document.body.scrollTop + document.documentElement.scrollTop;\n      if (!this.ticking) {\n        this.ticking = true;\n        requestAnimationFrame(function () {\n          if (_this.oldScrollTop > scrollTop) {\n            _this.visible = true;\n          } else if (scrollTop > 300 && _this.visible) {\n            _this.visible = false;\n          } else if (scrollTop < 300 && !_this.visible) {\n            _this.visible = true;\n          }\n          _this.oldScrollTop = scrollTop;\n          _this.ticking = false;\n        });\n      }\n    },\n    toggle: function toggle() {\n      this.$emit('toggle');\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    document.body.removeEventListener('scroll', this.handleScroll, true);\n  }\n};",{"version":3,"names":["UserMenu","SMenu","Logo","mixin","name","components","mixins","props","mode","type","String","default","menus","Array","required","theme","collapsed","Boolean","device","data","visible","oldScrollTop","mounted","document","addEventListener","handleScroll","passive","methods","_this","autoHideHeader","scrollTop","body","documentElement","ticking","requestAnimationFrame","toggle","$emit","beforeDestroy","removeEventListener"],"sources":["src/components/GlobalHeader/GlobalHeader.vue"],"sourcesContent":["<template>\n  <transition name=\"showHeader\">\n    <div v-if=\"visible\" class=\"header-animat\">\n      <a-layout-header\n        v-if=\"visible\"\n        :class=\"[fixedHeader && 'ant-header-fixedHeader', sidebarOpened ? 'ant-header-side-opened' : 'ant-header-side-closed', ]\"\n        :style=\"{ padding: '0' }\">\n        <div v-if=\"mode === 'sidemenu'\" class=\"header\">\n          <user-menu></user-menu>\n        </div>\n        <div v-else :class=\"['top-nav-header-index', theme]\">\n          <div class=\"header-index-wide\">\n            <div class=\"header-index-left\">\n              <s-menu  mode=\"horizontal\" :menu=\"menus\" :theme=\"theme\" />\n            </div>\n            <user-menu class=\"header-index-right\"></user-menu>\n          </div>\n        </div>\n      </a-layout-header>\n    </div>\n  </transition>\n</template>\n\n<script>\nimport UserMenu from '../tools/UserMenu'\nimport SMenu from '../Menu/'\nimport Logo from '../tools/Logo'\nimport { mixin } from '@/utils/mixin'\n\nexport default {\n  name: 'GlobalHeader',\n  components: {\n    UserMenu,\n    SMenu,\n    Logo\n  },\n  mixins: [mixin],\n  props: {\n    mode: {\n      type: String,\n      // sidemenu, topmenu\n      default: 'sidemenu'\n    },\n    menus: {\n      type: Array,\n      required: true\n    },\n    theme: {\n      type: String,\n      required: false,\n      default: 'dark'\n    },\n    collapsed: {\n      type: Boolean,\n      required: false,\n      default: false\n    },\n    device: {\n      type: String,\n      required: false,\n      default: 'desktop'\n    }\n  },\n  data () {\n    return {\n      visible: true,\n      oldScrollTop: 0\n    }\n  },\n  mounted () {\n    document.addEventListener('scroll', this.handleScroll, { passive: true })\n  },\n  methods: {\n    handleScroll () {\n      if (!this.autoHideHeader) {\n        return\n      }\n\n      const scrollTop = document.body.scrollTop + document.documentElement.scrollTop\n      if (!this.ticking) {\n        this.ticking = true\n        requestAnimationFrame(() => {\n          if (this.oldScrollTop > scrollTop) {\n            this.visible = true\n          } else if (scrollTop > 300 && this.visible) {\n            this.visible = false\n          } else if (scrollTop < 300 && !this.visible) {\n            this.visible = true\n          }\n          this.oldScrollTop = scrollTop\n          this.ticking = false\n        })\n      }\n    },\n    toggle () {\n      this.$emit('toggle')\n    }\n  },\n  beforeDestroy () {\n    document.body.removeEventListener('scroll', this.handleScroll, true)\n  }\n}\n</script>\n\n<style lang=\"less\">\n@import '../index.less';\n\n.header-animat{\n  position: relative;\n  z-index: @ant-global-header-zindex;\n}\n.showHeader-enter-active {\n  transition: all 0.25s ease;\n}\n.showHeader-leave-active {\n  transition: all 0.5s ease;\n}\n.showHeader-enter, .showHeader-leave-to {\n  opacity: 0;\n}\n</style>\n"],"mappings":"AAwBA,OAAAA,QAAA;AACA,OAAAC,KAAA;AACA,OAAAC,IAAA;AACA,SAAAC,KAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAL,QAAA,EAAAA,QAAA;IACAC,KAAA,EAAAA,KAAA;IACAC,IAAA,EAAAA;EACA;EACAI,MAAA,GAAAH,KAAA;EACAI,KAAA;IACAC,IAAA;MACAC,IAAA,EAAAC,MAAA;MACA;MACAC,OAAA;IACA;IACAC,KAAA;MACAH,IAAA,EAAAI,KAAA;MACAC,QAAA;IACA;IACAC,KAAA;MACAN,IAAA,EAAAC,MAAA;MACAI,QAAA;MACAH,OAAA;IACA;IACAK,SAAA;MACAP,IAAA,EAAAQ,OAAA;MACAH,QAAA;MACAH,OAAA;IACA;IACAO,MAAA;MACAT,IAAA,EAAAC,MAAA;MACAI,QAAA;MACAH,OAAA;IACA;EACA;EACAQ,IAAA,WAAAA,KAAA;IACA;MACAC,OAAA;MACAC,YAAA;IACA;EACA;EACAC,OAAA,WAAAA,QAAA;IACAC,QAAA,CAAAC,gBAAA,gBAAAC,YAAA;MAAAC,OAAA;IAAA;EACA;EACAC,OAAA;IACAF,YAAA,WAAAA,aAAA;MAAA,IAAAG,KAAA;MACA,UAAAC,cAAA;QACA;MACA;MAEA,IAAAC,SAAA,GAAAP,QAAA,CAAAQ,IAAA,CAAAD,SAAA,GAAAP,QAAA,CAAAS,eAAA,CAAAF,SAAA;MACA,UAAAG,OAAA;QACA,KAAAA,OAAA;QACAC,qBAAA;UACA,IAAAN,KAAA,CAAAP,YAAA,GAAAS,SAAA;YACAF,KAAA,CAAAR,OAAA;UACA,WAAAU,SAAA,UAAAF,KAAA,CAAAR,OAAA;YACAQ,KAAA,CAAAR,OAAA;UACA,WAAAU,SAAA,WAAAF,KAAA,CAAAR,OAAA;YACAQ,KAAA,CAAAR,OAAA;UACA;UACAQ,KAAA,CAAAP,YAAA,GAAAS,SAAA;UACAF,KAAA,CAAAK,OAAA;QACA;MACA;IACA;IACAE,MAAA,WAAAA,OAAA;MACA,KAAAC,KAAA;IACA;EACA;EACAC,aAAA,WAAAA,cAAA;IACAd,QAAA,CAAAQ,IAAA,CAAAO,mBAAA,gBAAAb,YAAA;EACA;AACA"}]}