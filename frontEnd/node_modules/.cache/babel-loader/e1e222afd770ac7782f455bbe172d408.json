{"remainingRequest":"/Users/movi/Desktop/current/frontEnd/node_modules/thread-loader/dist/cjs.js!/Users/movi/Desktop/current/frontEnd/node_modules/babel-loader/lib/index.js!/Users/movi/Desktop/current/frontEnd/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/movi/Desktop/current/frontEnd/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/movi/Desktop/current/frontEnd/src/components/Charts/TagCloud.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/movi/Desktop/current/frontEnd/src/components/Charts/TagCloud.vue","mtime":1679903640000},{"path":"/Users/movi/Desktop/current/frontEnd/babel.config.js","mtime":1679456648000},{"path":"/Users/movi/Desktop/current/frontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1651221196058},{"path":"/Users/movi/Desktop/current/frontEnd/node_modules/thread-loader/dist/cjs.js","mtime":1646811141074},{"path":"/Users/movi/Desktop/current/frontEnd/node_modules/babel-loader/lib/index.js","mtime":1669512949620},{"path":"/Users/movi/Desktop/current/frontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1651221196058},{"path":"/Users/movi/Desktop/current/frontEnd/node_modules/vue-loader/lib/index.js","mtime":1669512954316}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.number.constructor\";\nimport _defineProperty from \"/Users/movi/Desktop/current/frontEnd/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { registerShape } from 'viser-vue';\nvar DataSet = require('@antv/data-set');\nvar imgUrl = 'https://gw.alipayobjects.com/zos/rmsportal/gWyeGLCdFFRavBGIDzWk.png';\nvar scale = [{\n  dataKey: 'x',\n  nice: false\n}, {\n  dataKey: 'y',\n  nice: false\n}];\nregisterShape('point', 'cloud', {\n  draw: function draw(cfg, container) {\n    return container.addShape('text', {\n      attrs: _objectSpread(_objectSpread({\n        fillOpacity: cfg.opacity,\n        fontSize: cfg.origin._origin.size,\n        rotate: cfg.origin._origin.rotate,\n        text: cfg.origin._origin.text,\n        textAlign: 'center',\n        fontFamily: cfg.origin._origin.font,\n        fill: cfg.color,\n        textBaseline: 'Alphabetic'\n      }, cfg.style), {}, {\n        x: cfg.x,\n        y: cfg.y\n      })\n    });\n  }\n});\nexport default {\n  name: 'TagCloud',\n  props: {\n    tagList: {\n      type: Array,\n      required: true\n    },\n    height: {\n      type: Number,\n      default: 400\n    },\n    width: {\n      type: Number,\n      default: 640\n    }\n  },\n  data: function data() {\n    return {\n      data: [],\n      scale: scale\n    };\n  },\n  watch: {\n    tagList: function tagList(val) {\n      if (val.length > 0) {\n        this.initTagCloud(val);\n      }\n    }\n  },\n  mounted: function mounted() {\n    if (this.tagList.length > 0) {\n      this.initTagCloud(this.tagList);\n    }\n  },\n  methods: {\n    initTagCloud: function initTagCloud(dataSource) {\n      var _this = this;\n      var height = this.height,\n        width = this.width;\n      var dv = new DataSet.View().source(dataSource);\n      var range = dv.range('value');\n      var min = range[0];\n      var max = range[1];\n      var imageMask = new Image();\n      imageMask.crossOrigin = '';\n      imageMask.src = imgUrl;\n      imageMask.onload = function () {\n        dv.transform({\n          type: 'tag-cloud',\n          fields: ['name', 'value'],\n          size: [width, height],\n          imageMask: imageMask,\n          font: 'Verdana',\n          padding: 0,\n          timeInterval: 5000,\n          // max execute time\n          rotate: function rotate() {\n            var random = ~~(Math.random() * 4) % 4;\n            if (random === 2) {\n              random = 0;\n            }\n            return random * 90; // 0, 90, 270\n          },\n          fontSize: function fontSize(d) {\n            if (d.value) {\n              return (d.value - min) / (max - min) * (32 - 8) + 8;\n            }\n            return 0;\n          }\n        });\n        _this.data = dv.rows;\n      };\n    }\n  }\n};",null]}