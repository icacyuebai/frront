{"remainingRequest":"/Users/movi/Desktop/current/frontEnd/node_modules/thread-loader/dist/cjs.js!/Users/movi/Desktop/current/frontEnd/node_modules/babel-loader/lib/index.js!/Users/movi/Desktop/current/frontEnd/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/movi/Desktop/current/frontEnd/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/movi/Desktop/current/frontEnd/src/components/CountDown/CountDown.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/movi/Desktop/current/frontEnd/src/components/CountDown/CountDown.vue","mtime":1679456648000},{"path":"/Users/movi/Desktop/current/frontEnd/babel.config.js","mtime":1679456648000},{"path":"/Users/movi/Desktop/current/frontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1651221196058},{"path":"/Users/movi/Desktop/current/frontEnd/node_modules/thread-loader/dist/cjs.js","mtime":1646811141074},{"path":"/Users/movi/Desktop/current/frontEnd/node_modules/babel-loader/lib/index.js","mtime":1669512949620},{"path":"/Users/movi/Desktop/current/frontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1651221196058},{"path":"/Users/movi/Desktop/current/frontEnd/node_modules/vue-loader/lib/index.js","mtime":1669512954316}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.number.constructor\";\nfunction fixedZero(val) {\n  return val * 1 < 10 ? \"0\".concat(val) : val;\n}\nexport default {\n  name: 'CountDown',\n  props: {\n    format: {\n      type: Function,\n      default: undefined\n    },\n    target: {\n      type: [Date, Number],\n      required: true\n    },\n    onEnd: {\n      type: Function,\n      default: function _default() {\n        return {};\n      }\n    }\n  },\n  data: function data() {\n    return {\n      dateTime: '0',\n      originTargetTime: 0,\n      lastTime: 0,\n      timer: 0,\n      interval: 1000\n    };\n  },\n  filters: {\n    format: function format(time) {\n      var hours = 60 * 60 * 1000;\n      var minutes = 60 * 1000;\n      var h = Math.floor(time / hours);\n      var m = Math.floor((time - h * hours) / minutes);\n      var s = Math.floor((time - h * hours - m * minutes) / 1000);\n      return \"\".concat(fixedZero(h), \":\").concat(fixedZero(m), \":\").concat(fixedZero(s));\n    }\n  },\n  created: function created() {\n    this.initTime();\n    this.tick();\n  },\n  methods: {\n    initTime: function initTime() {\n      var lastTime = 0;\n      var targetTime = 0;\n      this.originTargetTime = this.target;\n      try {\n        if (Object.prototype.toString.call(this.target) === '[object Date]') {\n          targetTime = this.target;\n        } else {\n          targetTime = new Date(this.target).getTime();\n        }\n      } catch (e) {\n        throw new Error('invalid target prop');\n      }\n      lastTime = targetTime - new Date().getTime();\n      this.lastTime = lastTime < 0 ? 0 : lastTime;\n    },\n    tick: function tick() {\n      var _this = this;\n      var onEnd = this.onEnd;\n      this.timer = setTimeout(function () {\n        if (_this.lastTime < _this.interval) {\n          clearTimeout(_this.timer);\n          _this.lastTime = 0;\n          if (typeof onEnd === 'function') {\n            onEnd();\n          }\n        } else {\n          _this.lastTime -= _this.interval;\n          _this.tick();\n        }\n      }, this.interval);\n    }\n  },\n  beforeUpdate: function beforeUpdate() {\n    if (this.originTargetTime !== this.target) {\n      this.initTime();\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    clearTimeout(this.timer);\n  }\n};",null]}