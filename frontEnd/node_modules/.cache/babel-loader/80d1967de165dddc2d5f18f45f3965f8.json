{"remainingRequest":"/Users/movi/Desktop/current/frontEnd/node_modules/thread-loader/dist/cjs.js!/Users/movi/Desktop/current/frontEnd/node_modules/babel-loader/lib/index.js!/Users/movi/Desktop/current/frontEnd/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/movi/Desktop/current/frontEnd/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/movi/Desktop/current/frontEnd/src/views/event/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/movi/Desktop/current/frontEnd/src/views/event/index.vue","mtime":1682065451190},{"path":"/Users/movi/Desktop/current/frontEnd/babel.config.js","mtime":1679456648000},{"path":"/Users/movi/Desktop/current/frontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1651221196058},{"path":"/Users/movi/Desktop/current/frontEnd/node_modules/thread-loader/dist/cjs.js","mtime":1646811141074},{"path":"/Users/movi/Desktop/current/frontEnd/node_modules/babel-loader/lib/index.js","mtime":1669512949620},{"path":"/Users/movi/Desktop/current/frontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1651221196058},{"path":"/Users/movi/Desktop/current/frontEnd/node_modules/vue-loader/lib/index.js","mtime":1669512954316}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport _toConsumableArray from \"/Users/movi/Desktop/current/frontEnd/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray.js\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/movi/Desktop/current/frontEnd/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.function.name\";\nimport _defineProperty from \"/Users/movi/Desktop/current/frontEnd/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js\";\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { reqEvent, deleteEvent as _deleteEvent, updateEvent, bindEvent, bindedUserIDList, updateJson } from '@/api/event.js';\nimport { reqUserList } from '@/api/user';\nimport { mapGetters } from 'vuex';\nimport { notification } from 'ant-design-vue';\nimport * as echarts from \"echarts\";\nexport default {\n  name: 'Event',\n  data: function data() {\n    return {\n      data: null,\n      selectedRowKeys: [],\n      // Check here to configure the default column\n      columns: [{\n        title: 'id',\n        dataIndex: 'id',\n        key: 'id',\n        width: '80px'\n      },\n      // {\n      //   title: '简介',\n      //   key:'introduction',\n      //   dataIndex: 'introduction',\n      //   ellipsis:true\n      // },\n      {\n        title: '主题',\n        key: 'name',\n        dataIndex: 'name',\n        ellipsis: true,\n        width: '80'\n      },\n      // {\n      //   title: '发生经过',\n      //   key:'process',\n      //   dataIndex: 'process',\n      //   ellipsis:true\n      // },\n      {\n        title: '类型',\n        key: 'type',\n        dataIndex: 'type',\n        width: '90px'\n      },\n      // {\n      //   title: 'url',\n      //   key:'url',\n      //   dataIndex: 'url'\n      // },\n      {\n        title: '操作',\n        key: 'action',\n        scopedSlots: {\n          customRender: 'action'\n        },\n        width: '220'\n      }],\n      page_num: 1,\n      page_size: 10,\n      total: 0,\n      type: null,\n      // 文件上传\n      uploadModalVisible: false,\n      confirmLoading: false,\n      file: null,\n      fileList: [],\n      // 上传json\n      updateJsonModalVisible: false,\n      json: null,\n      jsons: [],\n      // 展示json\n      viewJsonModalVisible: false,\n      myChart: null,\n      jsonData: null,\n      nodeForm: null,\n      nodeIndex: null,\n      nodeModalVisible: false,\n      // 分配\n      bindModalVisible: false,\n      userIDList: [],\n      userList: [],\n      toBindEventName: \"\",\n      // 更新\n      updateModalVisible: false,\n      form: {\n        name: \"\",\n        introduction: \"\",\n        url: \"\",\n        process: \"\",\n        type: \"\"\n      }\n    };\n  },\n  computed: _objectSpread({}, mapGetters(['roleType'])),\n  methods: {\n    initEchart: function initEchart() {\n      if (!this.myChart) {\n        var dom = document.getElementById(\"echarts\");\n        this.myChart = echarts.init(dom);\n      }\n      var option;\n      option = {\n        tooltip: {\n          formatter: function formatter(params) {\n            var data = params.data;\n            var html = '<div style=\"width:280px;height:180px;background:#5370c6;border:1px solid rgba(7,166,255,0.7)\">' + '<div style=\"width:100%;min-height:22px;line-height:22px;border-bottom:2px solid rgba(7,166,255,0.7);padding:0 20px\">' + '<span style=\"color:#fff;font-size:14px;word-wrap:break-word;white-space:normal;\">' + params.name + '</span>' + '</div>' + '<div style=\"padding:20px\">';\n            for (var key in data) {\n              if ([\"name\", \"x\", \"y\"].indexOf(key) === -1) {\n                html += \"<p style=\\\"color:#fff;font-size:12px;\\\">\\n                        \".concat(key, \": \").concat(data[key], \"</span>\\n                       </p>\");\n              }\n            }\n            html += '</div>' + '</div>';\n            return html;\n          }\n        },\n        animationDurationUpdate: 1500,\n        animationEasingUpdate: \"quinticInOut\",\n        series: [{\n          type: \"graph\",\n          layout: \"none\",\n          symbolSize: 50,\n          roam: true,\n          label: {\n            formatter: '{b}',\n            show: true\n          },\n          edgeSymbol: [\"circle\", \"arrow\"],\n          edgeSymbolSize: [4, 10],\n          edgeLabel: {\n            fontSize: 20\n          },\n          data: this.json.dict_ls,\n          links: this.json.links,\n          lineStyle: {\n            opacity: 0.9,\n            width: 2,\n            curveness: 0\n          }\n        }]\n      };\n      option && this.myChart.setOption(option);\n      var that = this;\n      this.myChart.on('click', function (params) {\n        var data = params.data;\n        // 如果除了name,x,y外无其他的key，则不弹窗\n        if (params.data && Object.keys(data).length > 3) {\n          that.nodeModalVisible = true;\n          that.nodeForm = data;\n          that.nodeIndex = params.dataIndex;\n        }\n      });\n    },\n    handlePageChange: function () {\n      var _handlePageChange = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(page_num, page_size) {\n        var res;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return reqEvent({\n                page_num: page_num,\n                page_size: page_size\n              });\n            case 2:\n              res = _context.sent;\n              this.data = res.result.events;\n              this.total = res.result.count;\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function handlePageChange(_x, _x2) {\n        return _handlePageChange.apply(this, arguments);\n      }\n      return handlePageChange;\n    }(),\n    handleEventChange: function () {\n      var _handleEventChange = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(page_num, page_size) {\n        var res;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return reqEvent({\n                page_num: page_num,\n                page_size: page_size\n              });\n            case 2:\n              res = _context2.sent;\n              this.data = res.result.events;\n              this.total = res.result.count;\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function handleEventChange(_x3, _x4) {\n        return _handleEventChange.apply(this, arguments);\n      }\n      return handleEventChange;\n    }(),\n    showUploadModal: function showUploadModal(jsonData) {\n      this.uploadModalVisible = true;\n    },\n    onSelectChange: function onSelectChange(selectedRowKeys) {\n      this.selectedRowKeys = selectedRowKeys;\n    },\n    closeModal: function closeModal() {\n      this.form = {\n        name: \"\",\n        introduction: \"\",\n        url: \"\",\n        process: \"\",\n        type: \"\"\n      };\n      this.toBindEventName = \"\";\n      this.userIDList = [];\n      this.bindModalVisible = false;\n      this.updateModalVisible = false;\n      this.updateJsonModalVisible = false;\n      this.json = null;\n      this.jsons = [];\n      this.selectedRowKeys = [];\n      this.fileList = [];\n      this.getTableData();\n    },\n    submitUpdateJson: function () {\n      var _submitUpdateJson = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return updateJson({\n                jsons: this.jsons\n              });\n            case 2:\n              res = _context3.sent;\n              if (res.code === 200) {\n                notification[\"success\"]({\n                  message: '更新成功'\n                });\n                this.closeModal();\n              }\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function submitUpdateJson() {\n        return _submitUpdateJson.apply(this, arguments);\n      }\n      return submitUpdateJson;\n    }(),\n    detail: function detail(name) {\n      this.$router.push({\n        path: \"/event/eventDetail\",\n        query: {\n          name: name\n        }\n      });\n    },\n    handleRemove: function handleRemove(file) {\n      var index = this.fileList.indexOf(file);\n      var newFileList = this.fileList.slice();\n      newFileList.splice(index, 1);\n      this.fileList = newFileList;\n    },\n    convertJsonToEchartData: function convertJsonToEchartData(file) {\n      var _this = this;\n      this.fileList = [].concat(_toConsumableArray(this.fileList), [file]);\n      var that = this;\n      var _loop = function _loop() {\n        var f = _this.fileList[i];\n        var reader = new FileReader();\n        reader.readAsText(f, \"UTF-8\");\n        reader.onload = function (_) {\n          var json = JSON.parse(reader.result);\n          var jsonFileName = f.name;\n\n          // 每次增加的步长\n          var stepX = 40;\n          var stepY = 40;\n          var positionDict = {};\n          var dict_ls = [];\n          var zeroPointPostionx = 100;\n          var zeroPointPostiony = 100;\n          var x = 0;\n          var y = 0;\n          dict_ls.push({\n            name: jsonFileName,\n            x: x,\n            y: y\n          });\n\n          // 关系列表\n          var links = [];\n\n          // 子分支列表存放\n          var next_ls = [];\n\n          // 存放第一层分支的数量\n          var fatherNum = 0;\n          for (var name in json) {\n            var dict = {};\n            dict[\"name\"] = name;\n\n            // 是否是第一层分支\n            if (next_ls.indexOf(name) === -1) {\n              fatherNum++;\n              if (fatherNum % 2 == 0) {\n                x = zeroPointPostionx - stepX;\n                y = zeroPointPostiony - stepY * fatherNum;\n                dict[\"x\"] = x;\n                dict[\"y\"] = y;\n              } else {\n                x = zeroPointPostionx - stepX;\n                y = zeroPointPostiony - stepY * fatherNum;\n                dict[\"x\"] = x;\n                dict[\"y\"] = y;\n              }\n              positionDict[name] = {\n                x: -2 * x,\n                y: y\n              };\n              links.push({\n                target: name,\n                source: jsonFileName\n              });\n            } else {\n              dict[\"x\"] = positionDict[name].x;\n              dict[\"y\"] = positionDict[name].y;\n            }\n            var sonNum = 0;\n            for (var val in json[name]) {\n              var key = json[name][val];\n              var links_item = {};\n              if (key[0] === \"next\") {\n                sonNum = sonNum + 1;\n                next_ls.push(val);\n                var _x5 = positionDict[name].x + stepX;\n                var _y = positionDict[name].y + stepY * sonNum;\n                positionDict[val] = {\n                  x: _x5,\n                  y: _y\n                };\n                links_item[\"target\"] = val;\n                links_item[\"source\"] = name;\n                links.push(links_item);\n              } else {\n                dict[key] = val;\n              }\n            }\n            dict_ls.push(dict);\n          }\n          that.jsons.push({\n            name: jsonFileName,\n            json: JSON.stringify({\n              dict_ls: dict_ls,\n              links: links\n            })\n          });\n        };\n      };\n      for (var i = 0; i < this.fileList.length; i++) {\n        _loop();\n      }\n      return false;\n    },\n    handleOk: function handleOk() {\n      this.confirmLoading = false;\n      this.uploadModalVisible = false;\n      this.updateModalVisible = false;\n    },\n    getTableData: function () {\n      var _getTableData = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return reqEvent({\n                page_num: 1,\n                page_size: 10,\n                type: this.type\n              });\n            case 2:\n              res = _context4.sent;\n              this.data = res.result.events;\n              this.total = res.result.count;\n              this.page_num = res.result.page_num;\n              this.page_size = res.result.page_size;\n            case 7:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function getTableData() {\n        return _getTableData.apply(this, arguments);\n      }\n      return getTableData;\n    }(),\n    submitForm: function () {\n      var _submitForm = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              this.confirmLoading = true;\n              _context5.next = 3;\n              return updateEvent(this.form);\n            case 3:\n              res = _context5.sent;\n              if (res.code === 200) {\n                this.confirmLoading = false;\n                this.updateModalVisible = false;\n                this.getTableData();\n                notification[\"success\"]({\n                  message: '更新成功'\n                });\n              }\n            case 5:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this);\n      }));\n      function submitForm() {\n        return _submitForm.apply(this, arguments);\n      }\n      return submitForm;\n    }(),\n    handleChange: function handleChange(info) {\n      if (info.file.status !== 'uploading') {\n        console.log(info.file, info.fileList);\n      }\n      if (info.file.status === 'done') {\n        notification[\"success\"]({\n          message: '上传成功'\n        });\n      } else if (info.file.status === 'error') {\n        notification[\"error\"]({\n          message: '上传失败'\n        });\n      }\n    },\n    batchBind: function () {\n      var _batchBind = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              if (this.selectedRowKeys.length) {\n                _context6.next = 3;\n                break;\n              }\n              notification[\"error\"]({\n                message: '请选择要分配的事件'\n              });\n              return _context6.abrupt(\"return\");\n            case 3:\n              this.bindModalVisible = true;\n              this.toBindEventName = \"batchBind\";\n              _context6.next = 7;\n              return this.getBindedUserIDList();\n            case 7:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this);\n      }));\n      function batchBind() {\n        return _batchBind.apply(this, arguments);\n      }\n      return batchBind;\n    }(),\n    bindUsers: function () {\n      var _bindUsers = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(name) {\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              this.bindModalVisible = true;\n              this.toBindEventName = name;\n              _context7.next = 4;\n              return this.getBindedUserIDList();\n            case 4:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, this);\n      }));\n      function bindUsers(_x6) {\n        return _bindUsers.apply(this, arguments);\n      }\n      return bindUsers;\n    }(),\n    getBindedUserIDList: function () {\n      var _getBindedUserIDList = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.next = 2;\n              return bindedUserIDList({\n                event_name: this.toBindEventName\n              });\n            case 2:\n              res = _context8.sent;\n              if (res.code === 200) {\n                this.userIDList = res.result.bindedUserIDList;\n              }\n            case 4:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8, this);\n      }));\n      function getBindedUserIDList() {\n        return _getBindedUserIDList.apply(this, arguments);\n      }\n      return getBindedUserIDList;\n    }(),\n    submitBindForm: function () {\n      var _submitBindForm = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {\n        var res, count, _iterator, _step, row;\n        return regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              if (!(!this.toBindEventName || !this.userIDList.length)) {\n                _context9.next = 3;\n                break;\n              }\n              notification[\"error\"]({\n                message: '关键数据缺失，请重试！'\n              });\n              return _context9.abrupt(\"return\");\n            case 3:\n              count = 0;\n              if (!(this.toBindEventName !== \"batchBind\")) {\n                _context9.next = 11;\n                break;\n              }\n              _context9.next = 7;\n              return bindEvent({\n                name: this.toBindEventName,\n                userIDList: this.userIDList\n              });\n            case 7:\n              res = _context9.sent;\n              if (res.code === 200) {\n                count += 1;\n              }\n              _context9.next = 30;\n              break;\n            case 11:\n              _iterator = _createForOfIteratorHelper(this.selectedRowKeys);\n              _context9.prev = 12;\n              _iterator.s();\n            case 14:\n              if ((_step = _iterator.n()).done) {\n                _context9.next = 22;\n                break;\n              }\n              row = _step.value;\n              _context9.next = 18;\n              return bindEvent({\n                name: row.name,\n                userIDList: this.userIDList\n              });\n            case 18:\n              res = _context9.sent;\n              if (res.code === 200) {\n                count += 1;\n              }\n            case 20:\n              _context9.next = 14;\n              break;\n            case 22:\n              _context9.next = 27;\n              break;\n            case 24:\n              _context9.prev = 24;\n              _context9.t0 = _context9[\"catch\"](12);\n              _iterator.e(_context9.t0);\n            case 27:\n              _context9.prev = 27;\n              _iterator.f();\n              return _context9.finish(27);\n            case 30:\n              notification[\"success\"]({\n                message: '分配成功,' + count + '条'\n              });\n              this.closeModal();\n            case 32:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee9, this, [[12, 24, 27, 30]]);\n      }));\n      function submitBindForm() {\n        return _submitBindForm.apply(this, arguments);\n      }\n      return submitBindForm;\n    }(),\n    updateEvent: function updateEvent(record) {\n      this.updateModalVisible = true;\n      this.form = record;\n    },\n    deleteEvent: function deleteEvent(id) {\n      var that = this;\n      this.$confirm({\n        title: '确定要删除该事件吗?',\n        okText: '确定',\n        okType: 'danger',\n        cancelText: '取消',\n        onOk: function () {\n          var _onOk = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10() {\n            var res;\n            return regeneratorRuntime.wrap(function _callee10$(_context10) {\n              while (1) switch (_context10.prev = _context10.next) {\n                case 0:\n                  _context10.next = 2;\n                  return _deleteEvent({\n                    id: id\n                  });\n                case 2:\n                  res = _context10.sent;\n                  if (res.code === 200) {\n                    that.$notification.open({\n                      message: '删除成功',\n                      duration: 1\n                    });\n                    this.getTableData();\n                  }\n                case 4:\n                case \"end\":\n                  return _context10.stop();\n              }\n            }, _callee10, this);\n          }));\n          function onOk() {\n            return _onOk.apply(this, arguments);\n          }\n          return onOk;\n        }(),\n        onCancel: function onCancel() {\n          console.log('Cancel');\n        }\n      });\n    },\n    getUserList: function () {\n      var _getUserList = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) switch (_context11.prev = _context11.next) {\n            case 0:\n              _context11.next = 2;\n              return reqUserList({\n                page_num: 1,\n                page_size: 9999\n              });\n            case 2:\n              res = _context11.sent;\n              if (res.code === 200) {\n                this.userList = res.result.users;\n              }\n            case 4:\n            case \"end\":\n              return _context11.stop();\n          }\n        }, _callee11, this);\n      }));\n      function getUserList() {\n        return _getUserList.apply(this, arguments);\n      }\n      return getUserList;\n    }()\n  },\n  created: function created() {\n    this.getTableData();\n    this.getUserList();\n  }\n};",null]}