{"remainingRequest":"/Users/movi/Desktop/current/frontEnd/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/movi/Desktop/current/frontEnd/src/components/GlobalHeader/GlobalHeader.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/movi/Desktop/current/frontEnd/src/components/GlobalHeader/GlobalHeader.vue","mtime":1679910313000},{"path":"/Users/movi/Desktop/current/frontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1651221196058},{"path":"/Users/movi/Desktop/current/frontEnd/node_modules/thread-loader/dist/cjs.js","mtime":1646811141074},{"path":"/Users/movi/Desktop/current/frontEnd/node_modules/babel-loader/lib/index.js","mtime":1669512949620},{"path":"/Users/movi/Desktop/current/frontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1651221196058},{"path":"/Users/movi/Desktop/current/frontEnd/node_modules/vue-loader/lib/index.js","mtime":1669512954316}],"contextDependencies":[],"result":["\nimport UserMenu from '../tools/UserMenu'\nimport SMenu from '../Menu/'\nimport Logo from '../tools/Logo'\nimport { mixin } from '@/utils/mixin'\n\nexport default {\n  name: 'GlobalHeader',\n  components: {\n    UserMenu,\n    SMenu,\n    Logo\n  },\n  mixins: [mixin],\n  props: {\n    mode: {\n      type: String,\n      // sidemenu, topmenu\n      default: 'sidemenu'\n    },\n    menus: {\n      type: Array,\n      required: true\n    },\n    theme: {\n      type: String,\n      required: false,\n      default: 'dark'\n    },\n    collapsed: {\n      type: Boolean,\n      required: false,\n      default: false\n    },\n    device: {\n      type: String,\n      required: false,\n      default: 'desktop'\n    }\n  },\n  data () {\n    return {\n      visible: true,\n      oldScrollTop: 0\n    }\n  },\n  mounted () {\n    document.addEventListener('scroll', this.handleScroll, { passive: true })\n  },\n  methods: {\n    handleScroll () {\n      if (!this.autoHideHeader) {\n        return\n      }\n\n      const scrollTop = document.body.scrollTop + document.documentElement.scrollTop\n      if (!this.ticking) {\n        this.ticking = true\n        requestAnimationFrame(() => {\n          if (this.oldScrollTop > scrollTop) {\n            this.visible = true\n          } else if (scrollTop > 300 && this.visible) {\n            this.visible = false\n          } else if (scrollTop < 300 && !this.visible) {\n            this.visible = true\n          }\n          this.oldScrollTop = scrollTop\n          this.ticking = false\n        })\n      }\n    },\n    toggle () {\n      this.$emit('toggle')\n    }\n  },\n  beforeDestroy () {\n    document.body.removeEventListener('scroll', this.handleScroll, true)\n  }\n}\n",null]}